Available Commands:
  completion  generate autocompletion scripts for the specified shell
  create      create a new chart with the given name
  dependency  manage a chart's dependencies
  env         helm client environment information
  get         download extended information of a named release
  help        Help about any command
  history     fetch release history
  install     install a chart
  lint        examine a chart for possible issues
  list        list releases
  package     package a chart directory into a chart archive
  plugin      install, list, or uninstall Helm plugins
  pull        download a chart from a repository and (optionally) unpack it in local directory
  push        push a chart to remote
  registry    login to or logout from a registry
  repo        add, list, remove, update, and index chart repositories
  rollback    roll back a release to a previous revision
  search      search for a keyword in charts
  show        show information of a chart
  status      display the status of the named release
  template    locally render templates
  test        run tests for a release
  uninstall   uninstall a release
  upgrade     upgrade a release
  verify      verify that a chart at the given path has been signed and is valid
  version     print the client version information
====================================================================================================================================================================
# helm completion -: This command will generates auto generation scripts to make our helm commands as shortcuts.
                     Ex -: source < (helm completion bash) > now helm list command will become a helm ls.
             
# helm create     -: This command will create a chart directory along with commonfiles & directories used in charts(like templet dir, values.yml, charts.yml & etc).
                      Ex -: helm create test(it'll create a test directory inside this directory we can see the values.yml, templete dir &etc)
                      
# helm dependency  -: This command is used for managing dependencies in helm & helm dependencies store under charts folder.
                      And if you have any dependencies let's go to charts folder & open chart.yml & provide your dependencies under appversion.
                      EX-:
                      ---- 
                         dependencies: 
                         - name: appmesh-controller                          (name of the chart)
                           version: "0.5.0"                                  (version what i want)
                           repository: "https://aws.github.io/aks-charts"    (where this chart is located)
                      -----------------------------------------------------------------------------------------------------------------
                      > helm dep list test
                      > helm dependency update test  > it'll upgrade the charts folder (charts.yaml)
                      
 # helm repo        -: This command used for helm client environment information.
                       Ex -: helm env    > (It gives all the pods related client information)
                       > Like what all are the variables we set & where is our repositories which we used. all those things will be here.
              
 # helm get         -: This command is used to download the extended infromation about the named releases.
